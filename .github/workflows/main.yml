# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    tags:
      - "*.*.*"
      - "test-*"


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set CALM_BRANCH
        shell: bash
        run: |
          echo ${GITHUB_REF#refs/*/}
          echo "CALM_BRANCH=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "DEBUGGING=1" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Install CALM
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/VitoVan/calm/${{ env.CALM_BRANCH }}/scripts/install.sh)"
      - name: Dist CALM APP
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          cat ~/.bash_profile
          source ~/.bash_profile
          calm dist && cp -r dist calm-app
          zip -r -9 calm-hello-macos.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete
          mv calm-*.zip $DEFAULT_PWD/
      - name: Dist CALM APP fancy-app
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          cat ~/.bash_profile
          source ~/.bash_profile
          calm dist --fancy-app HelloCalm
          mv HelloCalm.dmg $DEFAULT_PWD/HelloCalm.dmg
      - name: Dist CALM APP with-canvas
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          cat ~/.bash_profile
          source ~/.bash_profile
          calm dist --with-canvas && cp -r dist calm-app
          zip -r -9 calm-hello-macos-with-canvas.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete
          mv calm-*.zip $DEFAULT_PWD/
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          prerelease: true
          files: |
            calm-*.zip
            *.dmg

  windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set CALM_BRANCH
        shell: bash
        run: |
          echo ${GITHUB_REF#refs/*/}
          echo "CALM_BRANCH=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "DEBUGGING=1" >> $GITHUB_ENV

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19.1' # The Go version to download (if necessary) and use.

      - name: Build calm-zipper.exe
        run: |
          go version
          cd ./scripts/
          go build -ldflags -H=windowsgui calm-zipper.go
          Get-ChildItem -Force

      - name: Install SBCL (higher version > 2.2.5 with compression)
        shell: bash
        run: |
          curl -OL https://github.com/VitoVan/sbcl-windows-with-compression/releases/download/sbcl-2.2.9/sbcl-2.2.9-pre-made.7z
          7z x sbcl-2.2.9-pre-made.7z
          cd sbcl-2.2.9
          sh install.sh
          echo "SBCL_HOME=C:\Program Files\sbcl\lib\sbcl" >> $GITHUB_ENV
          echo "C:\Program Files\sbcl\bin" >> $GITHUB_PATH

      # Runs a set of commands using the runners shell
      - name: Install CALM
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString("https://raw.githubusercontent.com/VitoVan/calm/${{ env.CALM_BRANCH }}/scripts/install.ps1"))

      - name: Install ZIP
        run: |
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'pacman -S  --noconfirm --needed zip'

      - name: Dist CALM APP
        run: |
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'cd ~/calm/.github/workflows/ && pwd && source ~/.bash_profile && calm dist && cp -r dist calm-app && zip -r -9 calm-hello-windows.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete'
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'pwd && export DEFAULT_PWD=$(pwd) && mv ~/calm/.github/workflows/calm-hello-windows.zip $DEFAULT_PWD/'

      - name: Copy calm-zipper.exe for fancy-app
        run: |
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'cp ./scripts/calm-zipper.exe ~/calm/scripts/ && ls -lah ~/calm/scripts'

      - name: Dist CALM APP fancy-app
        run: |
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'cd ~/calm/.github/workflows/ && pwd && source ~/.bash_profile && calm dist --fancy-app HelloCalm'
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'pwd && export DEFAULT_PWD=$(pwd) && mv ~/calm/.github/workflows/HelloCalm.exe $DEFAULT_PWD/HelloCalm.exe'

      - name: Dist CALM APP with-canvas
        run: |
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'cd ~/calm/.github/workflows/ && pwd && source ~/.bash_profile && calm dist --with-canvas && cp -r dist calm-app && zip -r -9 calm-hello-windows-with-canvas.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete'
          C:\msys64\msys2_shell.cmd -defterm -here -no-start -mingw64 -c 'pwd && export DEFAULT_PWD=$(pwd) && mv ~/calm/.github/workflows/calm-hello-windows-with-canvas.zip $DEFAULT_PWD/'
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          prerelease: true
          files: |
            calm-*.zip
            ./scripts/*.exe
            *.exe

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set CALM_BRANCH
        shell: bash
        run: |
          echo ${GITHUB_REF#refs/*/}
          echo "CALM_BRANCH=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "DEBUGGING=1" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Dockerfile
        run: |
          echo ${{ env.CALM_BRANCH }}
          sed "s/#TAG#/${{ env.CALM_BRANCH }}/" ./scripts/Dockerfile.template > Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          tags: vitovan/calm:${{ env.CALM_BRANCH }}
          cache-from: type=registry,ref=vitovan/calm:buildcache
          cache-to: type=registry,ref=vitovan/calm:buildcache,mode=max

  # This workflow contains a single job called "build"
  linux:
    # The type of runner that the job will run on
    needs: docker
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set CALM_BRANCH
        shell: bash
        run: |
          echo ${GITHUB_REF#refs/*/}
          echo "CALM_BRANCH=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "DEBUGGING=1" >> $GITHUB_ENV

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Install CALM
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/VitoVan/calm/${{ env.CALM_BRANCH }}/scripts/install.sh)"

      - name: Dist CALM APP
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          docker run -v $PWD:/app --rm vitovan/calm:${{ env.CALM_BRANCH }} dist
          cp -r dist calm-app
          zip -r -9 calm-hello-linux.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete
          mv calm-*.zip $DEFAULT_PWD/
      - name: Dist CALM APP fancy-app
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          cat ~/.bash_profile
          source ~/.bash_profile
          calm dist --fancy-app HelloCalm
          mv HelloCalm.AppImage $DEFAULT_PWD/HelloCalm.AppImage
      - name: Dist CALM APP with-canvas
        run: |
          pwd
          export DEFAULT_PWD=$(pwd)
          cd ~/calm/.github/workflows/
          docker run -v $PWD:/app --rm vitovan/calm:${{ env.CALM_BRANCH }} dist --with-canvas
          cp -r dist calm-app
          zip -r -9 calm-hello-linux-with-canvas.zip ./calm-app && mv ./calm-app ./used-dir-ready-to-delete
          mv calm-*.zip $DEFAULT_PWD/
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          prerelease: true
          files: |
            calm-*.zip
            *.AppImage
